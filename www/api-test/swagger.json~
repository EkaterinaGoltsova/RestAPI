{
  "swagger": "2.0",
  "info": {
    "description": "REST API for working with authors.",
    "version": "1.0.0",
    "title": "Authors Rest Api",
    "contact": {
      "email": "e.goltsova@office.ngs.ru"
    }
  },
  "host": "api-test:8080",
  "basePath": "/v1",
  "tags": [
    {
      "name": "authors",
      "description": "Everything about authors"
    }
  ],
  "schemes": [
    "http"
  ],
  "responses": {
    "200": {
      "description": "Success"
    },
    "400": {
      "description": "Invalid input"
    },
    "404": {
      "description": "Author not found"
    }
  },
  "paths": {
    "/authors": {
      "post": {
        "tags": [
          "authors"
        ],
        "summary": "Add a new author to the store",
        "operationId": "addAuthor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Author object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Author"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          }
        }
      }
    },
    "/authors/{authorId}": {
      "get": {
        "tags": [
          "authors"
        ],
        "summary": "Find author by ID",
        "description": "Returns a single author",
        "operationId": "getAuthorById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorId",
            "in": "path",
            "description": "ID of author to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Author"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          }
        }
      },
      "post": {
        "tags": [
          "authors"
        ],
        "summary": "Updates a author in the store with form data",
        "description": "",
        "operationId": "updateAuthorWithForm",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorId",
            "in": "path",
            "description": "ID of author that needs to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Updated name of the author",
            "required": false,
            "type": "string"
          },
          {
            "name": "avatar",
            "in": "formData",
            "description": "Updated avatar of the author",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          }
        }
      },
      "delete": {
        "tags": [
          "author"
        ],
        "summary": "Deletes a author",
        "description": "",
        "operationId": "deleteAuthor",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorId",
            "in": "path",
            "description": "Author id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          }
        }
      }
    }
  },
  "definitions": {
    "Author": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "avatar": {
          "$ref": "#/definitions/Avatar"
        },
        "name": {
          "type": "string",
          "example": "Lev Tolstoy"
        },
        "nameAblative": {
          "type": "string",
          "example": "With Lev Tolstoy"
        }
      }
    },
    "Avatar": {
      "type": "object",
      "required": [
        "fileName"
      ],
      "properties": {
        "fileName": {
          "type": "string"
        },
        "width": {
          "type": "integer"
        },
        "height": {
          "type": "integer"
        }
      }
    }
  }
}
